2025-10-30T09:28:01.418013Z  INFO spawn_dataflow{build_id=None session_id=SessionId(019a301d-7b3f-7161-8392-f64a30688abb) dataflow=Descriptor { nodes: [Node { id: NodeId("sensor_receiver"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {}, outputs: {DataId("camera_info"), DataId("gps"), DataId("imu"), DataId("speed")}, source: Python(PythonSource { source: "dora_nodes/sensors/sensor_receiver.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("planner"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("gps"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("gps") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("plan")}, source: Python(PythonSource { source: "dora_nodes/planning/simple_planner.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("controller"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("plan"): Input { mapping: User(UserInputMapping { source: NodeId("planner"), output: DataId("plan") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("control")}, source: Python(PythonSource { source: "dora_nodes/control/vehicle_controller.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }], communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/adrien/桌面/DORAEmbodiedIntelligence/config") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `019a3472-0e89-7d4c-84b5-c42f93dcb387`
2025-10-30T09:28:01.419766Z  INFO dora_coordinator: successfully spawned dataflow `019a3472-0e89-7d4c-84b5-c42f93dcb387`
2025-10-30T09:28:01.700186Z  INFO dora_coordinator: removed machine id: 9b2b4b20-19cb-4ea1-bfbd-add5e66029e3 from dataflow: 019a3472-0e89-7d4c-84b5-c42f93dcb387
2025-10-30T11:20:14.842000Z  INFO spawn_dataflow{build_id=None session_id=SessionId(019a301d-7b3f-7161-8392-f64a30688abb) dataflow=Descriptor { nodes: [Node { id: NodeId("sensor_receiver"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {}, outputs: {DataId("camera_info"), DataId("gps"), DataId("imu"), DataId("speed")}, source: Python(PythonSource { source: "dora_nodes/sensors/sensor_receiver.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("planner"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("gps"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("gps") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("plan")}, source: Python(PythonSource { source: "dora_nodes/planning/simple_planner.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("controller"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("plan"): Input { mapping: User(UserInputMapping { source: NodeId("planner"), output: DataId("plan") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("control")}, source: Python(PythonSource { source: "dora_nodes/control/vehicle_controller.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }], communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/adrien/桌面/DORAEmbodiedIntelligence/config") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `019a34d8-ccf9-775e-8fa7-6fcc1388f5be`
2025-10-30T11:20:14.843708Z  INFO dora_coordinator: successfully spawned dataflow `019a34d8-ccf9-775e-8fa7-6fcc1388f5be`
2025-10-30T11:20:15.053457Z  INFO dora_coordinator: removed machine id: 9b2b4b20-19cb-4ea1-bfbd-add5e66029e3 from dataflow: 019a34d8-ccf9-775e-8fa7-6fcc1388f5be
2025-10-30T11:54:41.782189Z  INFO spawn_dataflow{build_id=None session_id=SessionId(019a301d-7b3f-7161-8392-f64a30688abb) dataflow=Descriptor { nodes: [Node { id: NodeId("sensor_receiver"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {}, outputs: {DataId("camera_info"), DataId("gps"), DataId("imu"), DataId("speed")}, source: Python(PythonSource { source: "dora_nodes/sensors/sensor_receiver.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("planner"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("gps"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("gps") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("plan")}, source: Python(PythonSource { source: "dora_nodes/planning/simple_planner.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("controller"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("plan"): Input { mapping: User(UserInputMapping { source: NodeId("planner"), output: DataId("plan") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("control")}, source: Python(PythonSource { source: "dora_nodes/control/vehicle_controller.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }], communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/adrien/桌面/DORAEmbodiedIntelligence/config") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `019a34f8-56f5-7348-af57-8bbf11d81b06`
2025-10-30T11:54:41.784896Z  INFO dora_coordinator: successfully spawned dataflow `019a34f8-56f5-7348-af57-8bbf11d81b06`
2025-10-30T11:54:42.025717Z  INFO dora_coordinator: removed machine id: 9b2b4b20-19cb-4ea1-bfbd-add5e66029e3 from dataflow: 019a34f8-56f5-7348-af57-8bbf11d81b06
2025-10-30T12:00:05.354028Z  INFO spawn_dataflow{build_id=None session_id=SessionId(019a301d-7b3f-7161-8392-f64a30688abb) dataflow=Descriptor { nodes: [Node { id: NodeId("sensor_receiver"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {}, outputs: {DataId("camera_info"), DataId("gps"), DataId("imu"), DataId("speed")}, source: Python(PythonSource { source: "dora_nodes/sensors/sensor_receiver.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("planner"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("gps"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("gps") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("plan")}, source: Python(PythonSource { source: "dora_nodes/planning/simple_planner.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("controller"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("plan"): Input { mapping: User(UserInputMapping { source: NodeId("planner"), output: DataId("plan") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("control")}, source: Python(PythonSource { source: "dora_nodes/control/vehicle_controller.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }], communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/adrien/桌面/DORAEmbodiedIntelligence/config") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `019a34fd-46e9-78b4-a1ac-38318aaea26f`
2025-10-30T12:00:05.356635Z  INFO dora_coordinator: successfully spawned dataflow `019a34fd-46e9-78b4-a1ac-38318aaea26f`
2025-10-30T12:00:05.593440Z  INFO dora_coordinator: removed machine id: 9b2b4b20-19cb-4ea1-bfbd-add5e66029e3 from dataflow: 019a34fd-46e9-78b4-a1ac-38318aaea26f
2025-10-30T12:01:04.829852Z  INFO spawn_dataflow{build_id=None session_id=SessionId(019a301d-7b3f-7161-8392-f64a30688abb) dataflow=Descriptor { nodes: [Node { id: NodeId("sensor_receiver"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {}, outputs: {DataId("camera_info"), DataId("gps"), DataId("imu"), DataId("speed")}, source: Python(PythonSource { source: "dora_nodes/sensors/sensor_receiver.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("planner"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("gps"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("gps") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("plan")}, source: Python(PythonSource { source: "dora_nodes/planning/simple_planner.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("controller"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("plan"): Input { mapping: User(UserInputMapping { source: NodeId("planner"), output: DataId("plan") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("control")}, source: Python(PythonSource { source: "dora_nodes/control/vehicle_controller.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }], communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/adrien/桌面/DORAEmbodiedIntelligence/config") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `019a34fe-2f3d-76f3-9296-91d6f80cb72b`
2025-10-30T12:01:04.831847Z  INFO dora_coordinator: successfully spawned dataflow `019a34fe-2f3d-76f3-9296-91d6f80cb72b`
2025-10-30T12:01:05.082251Z  INFO dora_coordinator: removed machine id: 9b2b4b20-19cb-4ea1-bfbd-add5e66029e3 from dataflow: 019a34fe-2f3d-76f3-9296-91d6f80cb72b
2025-10-30T12:07:55.977767Z  INFO spawn_dataflow{build_id=None session_id=SessionId(019a301d-7b3f-7161-8392-f64a30688abb) dataflow=Descriptor { nodes: [Node { id: NodeId("sensor_receiver"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {}, outputs: {DataId("camera_info"), DataId("gps"), DataId("imu"), DataId("speed")}, source: Python(PythonSource { source: "dora_nodes/sensors/sensor_receiver.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("planner"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("gps"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("gps") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("plan")}, source: Python(PythonSource { source: "dora_nodes/planning/simple_planner.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("controller"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("plan"): Input { mapping: User(UserInputMapping { source: NodeId("planner"), output: DataId("plan") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("control")}, source: Python(PythonSource { source: "dora_nodes/control/vehicle_controller.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }], communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/adrien/桌面/DORAEmbodiedIntelligence/config") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `019a3504-7549-760d-9fe6-6b2eed045f97`
2025-10-30T12:07:55.997618Z  INFO dora_coordinator: successfully spawned dataflow `019a3504-7549-760d-9fe6-6b2eed045f97`
2025-10-30T12:07:56.266806Z  INFO dora_coordinator: removed machine id: 9b2b4b20-19cb-4ea1-bfbd-add5e66029e3 from dataflow: 019a3504-7549-760d-9fe6-6b2eed045f97
2025-10-30T12:09:05.077989Z  INFO spawn_dataflow{build_id=None session_id=SessionId(019a301d-7b3f-7161-8392-f64a30688abb) dataflow=Descriptor { nodes: [Node { id: NodeId("sensor_receiver"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {}, outputs: {DataId("camera_info"), DataId("gps"), DataId("imu"), DataId("speed")}, source: Python(PythonSource { source: "dora_nodes/sensors/sensor_receiver.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("planner"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("gps"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("gps") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("plan")}, source: Python(PythonSource { source: "dora_nodes/planning/simple_planner.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }, Node { id: NodeId("controller"), name: None, description: None, path: None, args: None, env: Some({"PYTHONUNBUFFERED": Integer(1)}), operators: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("plan"): Input { mapping: User(UserInputMapping { source: NodeId("planner"), output: DataId("plan") }), queue_size: None }, DataId("speed"): Input { mapping: User(UserInputMapping { source: NodeId("sensor_receiver"), output: DataId("speed") }), queue_size: None }}, outputs: {DataId("control")}, source: Python(PythonSource { source: "dora_nodes/control/vehicle_controller.py", conda_env: None }), build: None, send_stdout_as: None } }), custom: None, outputs: {}, inputs: {}, send_stdout_as: None, build: None, git: None, branch: None, tag: None, rev: None, deploy: None }], communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/adrien/桌面/DORAEmbodiedIntelligence/config") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `019a3505-8335-72e0-b902-97f01784f64e`
2025-10-30T12:09:05.079706Z  INFO dora_coordinator: successfully spawned dataflow `019a3505-8335-72e0-b902-97f01784f64e`
2025-10-30T12:09:05.812890Z  INFO dora_coordinator: removed machine id: 1f53b6b4-1def-43d3-ae4e-5700345c4910 from dataflow: 019a3505-8335-72e0-b902-97f01784f64e
